package kr.co.himedia.thread04.solve;

class Bank{
	private int money = 10000;

	public int getMoney() {
		return money;
	}

	public void setMoney(int money) {
		this.money = money;
	}
	
	//예금하다
	public void deposit(int save) {
		int m =this.getMoney();
		
		try {
			Thread.sleep(3000);
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
		setMoney(m + save);
	}
	
	//인출하다
	public void withdraw(int minus) {
		int m =this.getMoney();
		
		try {
			Thread.sleep(1000);
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
		setMoney(m - minus);
	}
}

class Lee extends Thread{
	
	public void run() {
		System.out.println("입금 시작");
		SyncronizationTest2.myBank.deposit(3000);
		System.out.println("3000원 입금 : " + SyncronizationTest2.myBank.getMoney());
	}
}

class Shin extends Thread{
	
	public void run() {
		System.out.println("출금 시작");
		SyncronizationTest2.myBank.withdraw(1000);
		System.out.println("1000원 출금 : " + SyncronizationTest2.myBank.getMoney());
	}
	
}

public class SyncronizationTest2 {
	
	public static Bank myBank = new Bank();

	public static void main(String[] args) {
		
		Lee threadLee = new Lee(); //thread 생성자 호출
		threadLee.start();
		
		Shin threadShin = new Shin();
		threadShin.start();
		
		
	}
}
